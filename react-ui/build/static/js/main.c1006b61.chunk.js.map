{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","message","setMessage","isFetching","setIsFetching","url","fetchData","useCallback","fetch","then","response","ok","Error","status","json","catch","e","useEffect","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,iC,eCoE1BA,MAhEf,WACE,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsBJ,mBAAS,QAA/B,mBAAOK,EAAP,KAEMC,GAFN,KAEkBC,uBAAY,WAC5BC,MAAMH,GACHI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,iBAAoBF,EAASG,SAErC,OAAOH,EAASI,UAEjBL,MAAK,SAAAK,GACJZ,EAAWY,EAAKb,SAChBG,GAAc,MACbW,OAAM,SAAAC,GACPd,EAAW,oBAAD,OAAqBc,IAC/BZ,GAAc,QAEjB,CAACC,KAOJ,OALAY,qBAAU,WACRb,GAAc,GACdE,MACC,CAACA,IAGF,qBAAKY,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAErC,kFAOJ,8BAAI,QAAK,iCACNlB,EACG,4BACAF,IACI,WACV,4BAAG,mBACDiB,UAAU,WACVI,KAAK,0CAFJ,iDAMH,4BAAG,mBACDJ,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJH,iCC1CIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c1006b61.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useCallback, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [message, setMessage] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const [url, setUrl] = useState('/api');\n\n  const fetchData = useCallback(() => {\n    fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`status ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(json => {\n        setMessage(json.message);\n        setIsFetching(false);\n      }).catch(e => {\n        setMessage(`API call failed: ${e}`);\n        setIsFetching(false);\n      })\n  }, [url]);\n\n  useEffect(() => {\n    setIsFetching(true);\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        { process.env.NODE_ENV === 'production' ?\n            <p>\n              This is a production build from create-react-app.\n            </p>\n          : <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n        }\n        <p>{'« '}<strong>\n          {isFetching\n            ? 'Fetching message from API'\n            : message}\n        </strong>{' »'}</p>\n        <p><a\n          className=\"App-link\"\n          href=\"https://github.com/mars/heroku-cra-node\"\n        >\n          React + Node deployment on Heroku\n        </a></p>\n        <p><a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a></p>\n      </header>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}